<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.xebialabs.xldeploy.demos</groupId>
        <artifactId>xldeploy-petclinic-parent</artifactId>
        <version>1.0</version>
    </parent>
    <artifactId>PetPortal</artifactId>
    <packaging>dar</packaging>
    <version>3.1-SNAPSHOT</version>
    <name>PetClinic Docker XL Deploy DAR</name>
    <url>http://www.xebialabs.com</url>
    <build>
        <plugins>
            <plugin>
                <groupId>com.xebialabs.xldeploy</groupId>
                <artifactId>xldeploy-maven-plugin</artifactId>
                <version>5.0.1</version>

                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>deploy-id</id>
                        <phase>install</phase>
                        <goals>
                            <goal>import</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <serverAddress>localhost</serverAddress>
                    <applicationName>PetDocker</applicationName>
                    <deploymentPackageProperties>
                        <orchestrator>
                            <value>parallel-by-deployment-group</value>
                        </orchestrator>
                    </deploymentPackageProperties>

                    <orchestrator>parallel-by-deployment-group</orchestrator>
                    <deployables>
                        <smoketest.HttpRequestTest name="smoke test">
                            <url>http://{{BACK_HOST_ADDRESS}}:{{HOST_PORT}}/petclinic/</url>
                            <expectedResponseText>{{title}}</expectedResponseText>
                        </smoketest.HttpRequestTest>

                        <!--
                        <smoketest.HttpRequestTest name="smoke test - ha">
                            <url>http://{{FRONT_HOST_ADDRESS}}/petclinic/</url>
                            <expectedResponseText>{{title}}</expectedResponseText>
                        </smoketest.HttpRequestTest>
                        -->


                        <docker.ContainerSpec name="/petclinic">

                            <image>{{REGISTRY_HOST}}/bmoussaud/petclinic:${petclinic.image.version}</image>
                            <showLogsAfter>10</showLogsAfter>
                            <networks>
                                <value>petnetwork</value>
                            </networks>
                            <links>
                                <entry key="petclinic-backend">X</entry>
                            </links>
                            <portBindings>
                                <docker.PortSpec name="/petclinic/exposed-port">
                                    <hostPort>{{HOST_PORT}}</hostPort>
                                    <containerPort>8080</containerPort>
                                </docker.PortSpec>
                            </portBindings>
                            <volumeBindings>
                                <docker.MountedVolumeSpec name="/petclinic/petclinic-config">
                                    <volumeName>petclinic-config</volumeName>
                                    <mountpoint>/application/properties</mountpoint>
                                </docker.MountedVolumeSpec>
                            </volumeBindings>
                        </docker.ContainerSpec>
                        <docker.NetworkSpec name="/petnetwork">
                            <driver>bridge</driver>
                        </docker.NetworkSpec>
                        <docker.Folder name="/petclinic.config" location="config/">
                            <targetContainer>petclinic</targetContainer>
                            <targetPath>/application/properties</targetPath>
                        </docker.Folder>
                        <docker.ContainerSpec name="/petclinic-backend">
                            <image>{{REGISTRY_HOST}}/bmoussaud/petclinic-backend:${petclinic-backend.image.version}</image>
                            <showLogsAfter>10</showLogsAfter>
                        </docker.ContainerSpec>

                        <!--

                        <docker.Image name="ha-proxy">
                            <image>eeacms/haproxy:1.6</image>
                            <registryHost>{{PROJECT_REGISTRY_HOST}}</registryHost>
                            <network>petnetwork</network>
                            <labels>
                                <value>zone=front</value>
                            </labels>
                            <dependencies>
                                <value>petclinic</value>
                            </dependencies>
                            <ports>
                                <docker.PortSpec name="ha-proxy/web">
                                    <hostPort>80</hostPort>
                                    <containerPort>5000</containerPort>
                                </docker.PortSpec>
                                <docker.PortSpec name="ha-proxy/admin">
                                    <hostPort>1936</hostPort>
                                    <containerPort>1936</containerPort>
                                </docker.PortSpec>
                            </ports>
                            <variables>
                                <docker.EnvironmentVariableSpec name="ha-proxy/BACKENDS">
                                    <value>petclinic:8080</value>
                                </docker.EnvironmentVariableSpec>
                                <docker.EnvironmentVariableSpec name="ha-proxy/constraint">
                                    <value>zone==front</value>
                                    <separator>:</separator>
                                </docker.EnvironmentVariableSpec>
                            </variables>

                        </docker.Image>

                        -->

                        <sql.SqlScripts name="sql" location="sql"/>


                    </deployables>


                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

